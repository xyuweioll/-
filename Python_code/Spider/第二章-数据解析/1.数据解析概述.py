'''
三种解析概述
1.re解析
2.bs4解析
3.xpath解析
'''

# re解析
# Regular Expression 正则表达式，一种使用表达式的方式对字符串进行匹配的语法规则
'''
我们抓取到的网页源代码本质上就是一个超长字符串
正则的优点：速度快，效率高，准确性高
缺点：新手上手难度有点高.
'''
# 正则的语法：使用元字符进行排列组合用来匹配字符串 在线测试正则表达式 https://tool.oschina.net/regex/
# 号外：开源中国还有其他很多好用的工具

'''
元字符：具有固定含义的特殊符号，每个元字符默认只匹配一位字符串
常用元字符
.    匹配出换行符外的任意字符
\w   匹配字母或数字或下划线
\s   匹配任意的空白符
\d   匹配数字
\n   匹配一个换行符
\t   匹配一个制表符
^    匹配字符串的开始
$    匹配字符串的结尾
\W   匹配非字母或数字或下划线
\D   匹配非数字
\S   匹配非空白符
a|b  匹配字符a或字符b
()   匹配括号内的表达式，也表示一个组
[...] 匹配字符组中的字符
[^...] 匹配除了字符组中字符的所有字符
'''

# 量词
'''
控制前面的元字符出现的次数

*  重复零次或更多次
+  重复一次或更多次
?  重复零次或一次
{n} 重复n次
{n,} 重复n次或更多次
{n,m} 重复n到m次
'''
# 贪婪匹配和惰性匹配
'''
.*  贪婪匹配
.*? 惰性匹配       实现原理——回溯算法，先找到所有，再回退到第一个
'''
# 这两个是写爬虫用到的最多的匹配
